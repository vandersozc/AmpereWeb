package com.vandersoncamp.ampereweb.model;import com.vandersoncamp.ampereweb.util.EntityID;import javax.persistence.*;import javax.validation.constraints.NotNull;import java.io.Serializable;import java.math.BigDecimal;import java.util.Objects;@Entity@Table(name = "conducao_corrente")@SequenceGenerator(name = "seq_conducao_corrente", sequenceName = "seq_conducao_corrente", initialValue = 1, allocationSize = 1)public class ConducaoCorrente implements Serializable, EntityID {    @Id    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_conducao_corrente")    private Long id;    @NotNull    @ManyToOne    @JoinColumn(name = "i_aparelho", nullable = false)    private Aparelho aparelho;    @NotNull    @ManyToOne    @JoinColumn(name = "i_condutor", nullable = false)    private Condutor condutor;    @Column(name = "corrente")    private BigDecimal corrente;    @Column(name = "distancia")    private BigDecimal distancia;    @Column(name = "queda_tensao")    private BigDecimal quedaTensao;    @Override    public Long getId() {        return id;    }    public void setId(Long id) {        this.id = id;    }    public Aparelho getAparelho() {        return aparelho;    }    public void setAparelho(Aparelho aparelho) {        this.aparelho = aparelho;    }    public Condutor getCondutor() {        return condutor;    }    public void setCondutor(Condutor condutor) {        this.condutor = condutor;    }    public BigDecimal getCorrente() {        return corrente;    }    public void setCorrente(BigDecimal corrente) {        this.corrente = corrente;    }    public BigDecimal getDistancia() {        return distancia;    }    public void setDistancia(BigDecimal distancia) {        this.distancia = distancia;    }    public BigDecimal getQuedaTensao() {        return quedaTensao;    }    public void setQuedaTensao(BigDecimal quedaTensao) {        this.quedaTensao = quedaTensao;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        ConducaoCorrente that = (ConducaoCorrente) o;        return Objects.equals(id, that.id) &&                Objects.equals(aparelho, that.aparelho) &&                Objects.equals(condutor, that.condutor) &&                Objects.equals(corrente, that.corrente) &&                Objects.equals(distancia, that.distancia) &&                Objects.equals(quedaTensao, that.quedaTensao);    }    @Override    public int hashCode() {        return Objects.hash(id, aparelho, condutor, corrente, distancia, quedaTensao);    }    @Override    public String toString() {        return "ConducaoCorrente{" +                "id=" + id +                ", aparelho=" + aparelho +                ", condutor=" + condutor +                ", corrente=" + corrente +                ", distancia=" + distancia +                ", quedaTensao=" + quedaTensao +                '}';    }}