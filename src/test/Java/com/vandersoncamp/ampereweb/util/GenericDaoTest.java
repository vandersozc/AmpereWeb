package com.vandersoncamp.ampereweb.util;import com.vandersoncamp.ampereweb.model.Aparelho;import org.junit.jupiter.api.DisplayName;import org.junit.jupiter.api.Test;import org.mockito.Mockito;import javax.persistence.EntityManager;import java.math.BigDecimal;import static org.junit.jupiter.api.Assertions.assertEquals;import static org.junit.jupiter.api.Assertions.assertNotNull;import static org.mockito.ArgumentMatchers.any;import static org.mockito.Mockito.when;public class GenericDaoTest {    private GenericDao<Aparelho> genericDao = new GenericDao(entityManager(), Aparelho.class);    private EntityManager entityManager() {        EntityManager mock = Mockito.mock(EntityManager.class);        when(mock.find(any(), any())).thenReturn(aparelho("Aparelho teste"));        when(mock.merge(any())).thenReturn(aparelho("Aparelho alterado"));        when(mock.getReference(any(), any())).thenReturn(aparelho("Aparelho teste"));        mock.remove(any());        return mock;    }    private Aparelho aparelho(String descricao) {        Aparelho aparelho = new Aparelho();        aparelho.setId(1L);        aparelho.setDescricao(descricao);        aparelho.setPotencia(BigDecimal.TEN);        aparelho.setTensao(220);        return aparelho;    }    @Test    @DisplayName("Test insert")    public void Test01() {        Aparelho aparelho = genericDao.insert(aparelho("Aparelho teste"));        assertEquals(aparelho.getDescricao(), "Aparelho teste");    }    @Test    @DisplayName("Test findById")    public void Test02() {        assertNotNull(genericDao.find(1L));    }    @Test    @DisplayName("Test update")    public void Test03() {        Aparelho aparelho = aparelho("Aparelho teste");        aparelho.setDescricao("Aparelho alterado");        aparelho.setTensao(380);        Aparelho novo = genericDao.update(aparelho);        assertEquals(novo.getDescricao(), "Aparelho alterado");    }    @Test    @DisplayName("Test delete")    public void testDelete() {        genericDao.delete(1L);    }}